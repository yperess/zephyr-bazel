load(
    "@pigweed//pw_build:pigweed.bzl",
    "pw_cc_test",
)

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "pw_devicetree",
    hdrs = [],
    includes = [
      "public/pw_devicetree",
      "public/pw_devicetree/internal",
    ],
    deps = [
      ":config_override",
      ":zephyr_stubs",
      "@zephyr//:zephyr"
    ],
)

cc_library(
    name = "zephyr_stubs",
    # Architecture doesn't matter, as we're only using the DT APIs (not the
    # drivers/devices). It's here to bypass asserts in Zephyr's headers.
    defines = [ "CONFIG_ARM" ],
    hdrs = [
      "public/pw_devicetree/internal/zephyr_stubs/kobj-types-enum.h",
      "public/pw_devicetree/internal/zephyr_stubs/syscall_list.h",
      "public/pw_devicetree/internal/zephyr_stubs/syscalls/device.h",
      "public/pw_devicetree/internal/zephyr_stubs/syscalls/gpio.h",
      "public/pw_devicetree/internal/zephyr_stubs/syscalls/kernel.h",
      "public/pw_devicetree/internal/zephyr_stubs/syscalls/kobject.h",
      "public/pw_devicetree/internal/zephyr_stubs/syscalls/mbox.h",
    ],
    includes = [
      "public/pw_devicetree/internal/zephyr_stubs",
      "public/pw_devicetree/internal/zephyr_stubs/syscalls",
    ],
)

label_flag(
  name = "config_override",
  build_setting_default = ":api_test_config_overrides",
)

cc_library(
  name = "api_test_config_overrides",
  hdrs = [ "api_test/devicetree_generated.h" ],
  includes = [ "api_test" ]
)

config_setting(
  name = "api_test_config_override_setting",
  flag_values = {
    ":config_override": ":api_test_config_overrides",
  },
)

pw_cc_test(
    name = "api_test",
    srcs = [ "api_test/api_test.cc" ],
    target_compatible_with = select({
      ":api_test_config_override_setting": [],
      "//conditions:default": ["@platforms//:incompatible"],
    }),
    deps = [ "pw_devicetree" ],
)
